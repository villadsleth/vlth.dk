/* TEXT SHADOW */
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

/* Blur filter */


@mixin filter_my($filter-type,$filter-amount) {
-webkit-filter: $filter-type+unquote('(#{$filter-amount})');
-moz-filter: $filter-type+unquote('(#{$filter-amount})');
-ms-filter: $filter-type+unquote('(#{$filter-amount})');
-o-filter: $filter-type+unquote('(#{$filter-amount})');
filter: $filter-type+unquote('(#{$filter-amount})');
filter: url("data:image/svg+xml;utf9,<svg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'><filter%20id='blur'><feGaussianBlur%20stdDeviation='$filter-amount'%20/></filter></svg>#blur");
filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='$filter-amount');
}

/**
 * MOBILEFIRST MQ MIXIN I SASS
 * */

// Navngives efter Bootstrap
$screen-xs: 480px;
$screen-sm: 768px;
$screen-md: 1024px;
// $screen-lg: xxxx;


@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == screen-xs or $media == xs   {
        @media (min-width: $screen-xs) {
            @content;
        }
    }
    @else if $media == screen-sm or $media == sm {
        @media (min-width: $screen-sm) {
            @content;
        }
    }
    @else if $media == md or $media == md {
        @media (min-width: $screen-md) {
            @content;
        }
    }
    @else if $media == screen-lg or $media == lg {
        @media (min-width: $screen-lg) {
            @content;
        }
    }
}

// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)
@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx) {
    @content;
  }
}

@mixin respond-above($min) {
    @media (min-width: $min) {
        @content;
    }
}

@mixin respond-below($max) {
    @media (max-width: $max) {
        @content;
    }
}

@mixin respond-between($min, $max) {
    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}



/**
 * USAGE
 */

// @include respond-to(xs) {}

// @include hidpi(2) {}

// @include respond-above(sm) {}

// @include respond-below(md) {}

// @include respond-below(lg) {}

// @include respond-between(400px, 700px) {}

@mixin responsive-font-size($md, $sm : $md * 0.75, $xs : $md * 0.5) {
    @include fontsize($xs);
    @include respond-to(sm) {
        @include fontsize($sm);
    }
    @include respond-to(md) {
        @include fontsize($md);
    }
}

@mixin fontsize($size:1.6, $line: $size * 1.25){
    font-size:   ($size * 10) + px;
    line-height: ($line * 10) + px;
    font-size:   $size + rem;
    line-height: $line + rem;
}

@mixin responsive-gutter($md : 30px, $sm : 20px, $xs : 15px) {
    padding-left : $xs;
    padding-right : $xs;
    @include respond-to(sm) {
        padding-left : $sm;
        padding-right : $sm;
    }
    @include respond-to(md) {
        padding-left : $md;
        padding-right : $md;
    }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

// DIAFUTURE ZNLI CODES
$screen-xs: 480px;
$screen-sm: 768px;
$screen-md: 1024px;

@mixin long-shadow($type, $color, $length, $fadeout: true, $skew: false, $direction: right){
    $shadow: '';
    @if $skew == false or $type == text{
        @if $direction == right {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $color + ',';
            }
        }
        @if $direction == left {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $color + ',';
            }
        }
    }
    @if $fadeout == true{
        @for $i from 1 to $length - 1 {
            @if $type == text or $skew == false{
                @if $direction == right{
                    $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
                }
                @if $direction == left{
                    $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' +       rgba($color, 1 - $i / $length) + ',';
                }
            }
            @if ($type == box) and $skew == true{
                @if $direction == right {
                    $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
                }
                @if $direction == left {
                    $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
                }
            }
        }
        $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba($color, 0);
    }
    @if $fadeout == false{
        @if $skew == true and ( $type == box ){
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .1 + 'px ' + $color + ',';
            }
        }
        $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba(0,0,0,0);
    }
    $shadow: unquote($shadow);
    @if $type == 'box' {box-shadow: $shadow;}
    @if $type == 'text' {text-shadow: $shadow;}
}

@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == screen-xs or $media == xs   {
        @media (min-width: $screen-xs) {
            @content;
        }
    }
    @else if $media == screen-sm or $media == sm {
        @media (min-width: $screen-sm) {
            @content;
        }
    }
    @else if $media == md or $media == md {
        @media (min-width: $screen-md) {
            @content;
        }
    }
    @else if $media == screen-lg or $media == lg {
        @media (min-width: $screen-lg) {
            @content;
        }
    }
}

@mixin responsive-font-size($md, $sm : $md * 0.75, $xs : $md * 0.5) {
    @include fontsize($xs);
    @include respond-to(sm) {
        @include fontsize($sm);
    }
    @include respond-to(md) {
        @include fontsize($md);
    }
}

@mixin fontsize($size:1.6, $line: $size * 1.25){
    font-size:   ($size * 10) + px;
    line-height: ($line * 10) + px;
    font-size:   $size + rem;
    line-height: $line + rem;
}

@mixin line {
  display: inline-block;
  width: $button-size;
  height: $button-size/7;
  background: $color__grey;
  border-radius: $button-size/14;
  transition: $transition;
}


$image-path-svg: 'assets/svg' !default;
$image-path-images: 'assets/images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '_2x';
@mixin svg($name, $size:false){
    background-image: url(#{$image-path-svg}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path-images}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path-images}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}
